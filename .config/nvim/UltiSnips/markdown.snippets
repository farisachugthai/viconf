#######################################################################
#                         # Markdown Snippets                         #
#######################################################################

################
#  # Personal  #
################

# TODO: Make a python function. Visual var should be snip.fn
snippet cheat "Cheatsheet template"
# ${VISUAL}

## personal

${0:your notes}

${1:## cheat}

${2:## tldr}

${3:## eg}

${4:## man}
endsnippet

#######################################################################
#                             # SnipMate                              #
#######################################################################


snippet ```
	\`\`\`${1}
	${0:${VISUAL}}
	\`\`\`
endsnippet

# Language.
snippet ```l
	\`\`\`${1:language}
	${2:code}
	\`\`\`
endsnippet

snippet **
	**${1:bold}**
endsnippet

snippet __
	__${1:bold}__
endsnippet

snippet <
	<https://${1:url}>
endsnippet

# wait do these work?

# snippet codeblock-short
# 	{% codeblock %}
# 	${0:code_snippet}
# 	{% endcodeblock %}

# snippet codeblock-full
# 	{% codeblock ${1:title} lang:${2:language} ${3:URL} ${4:link_text} %}
# 	${0:code_snippet}
# 	{% endcodeblock %}

# snippet gist-full
# 	{% gist ${1:gist_id} ${0:filename} %}

# snippet gist-short
# 	{% gist ${0:gist_id} %}

# snippet img
# 	{% img ${1:class} ${2:URL} ${3:width} ${4:height} ${5:title_text} ${0:alt_text} %}

# snippet youtube
# 	{% youtube ${0:video_id} %}

#######################################################################
#                             # UltiSnips                             #
#######################################################################

global !p
def create_table(snip):
    # retrieving single line from current string and treat it like tabstops count
    placeholders_string = snip.buffer[snip.line].strip()[2:].split("x",1)
    rows_amount = int(placeholders_string[0])
    columns_amount = int(placeholders_string[1])

    # erase current line
    snip.buffer[snip.line] = ''

    # create anonymous snippet with expected content and number of tabstops
    anon_snippet_title = ' | '.join(['$' + str(col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_delimiter = ':-|' * (columns_amount-1) + ":-\n"
    anon_snippet_body = ""
    for row in range(1,rows_amount+1):
        anon_snippet_body += ' | '.join(['$' + str(row*columns_amount+col) for col in range(1,columns_amount+1)]) + "\n"
    anon_snippet_table = anon_snippet_title + anon_snippet_delimiter + anon_snippet_body

    # expand anonymous snippet
    snip.expand_anon(anon_snippet_table)
endglobal

###########################
# Sections and Paragraphs #
###########################
snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

###################
# Text formatting #
###################

snippet * "italics"
*${1:${VISUAL}}*$0
endsnippet

snippet ** "bold"
**${1:${VISUAL}}**$0
endsnippet

snippet *** "bold italics"
***${1:${VISUAL}}***$0
endsnippet


################
# Common stuff #
################
snippet link "Link to something"
[${1:${VISUAL:Text}}](${3:http://${2:www.url.com}})$0
endsnippet

snippet img "Image"
![${1:pic alt}](${2:path}${3/.+/ "/}${3:opt title}${3/.+/"/})$0
endsnippet

snippet ilc "Inline Code" i
\`$1\`$0
endsnippet

snippet code "Codeblock" b
\`\`\`
$1
\`\`\`
$0
endsnippet

snippet refl "Reference Link"
[${1:${VISUAL:Text}}][${2:id}]$0

[$2]:${4:http://${3:www.url.com}} "${5:$4}"
endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

pre_expand "create_table(snip)"
snippet "tb(\d+x\d+)" "Customizable table" br
endsnippet

# vim:ft=snippets:
