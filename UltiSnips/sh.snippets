# sh.snippets

priority 50

# Shebang. Good place to start
snippet #! "#!/bin/bash" b
#!/bin/bash
# Maintainer: Faris Chugthai
endsnippet

snippet # "dupe" b
#!/bin/bash
# Maintainer: Faris Chugthai
endsnippet

# Check command line arguments. Make the expandchar easier to remember
snippet [[ "If var is empty; echo help guide; break" b
if [[ -z "${1:${VISUAL}}" ]]; then
	${3:echo -e "Usage: $2 [options] commands"
	break}
fi
endsnippet

snippet test "Test if string is empty" w
test -z ${0:${VISUAL}}
endsnippet

snippet test "Test if string is not empty" w
test -n ${0:${VISUAL}}
endsnippet

snippet test "Test int equality" b
test ${0:${VISUAL}} -eq $1
endsnippet

snippet source "Var = bash source" b
${1:${VISUAL}}="${BASH_SOURCE[0]}"
endsnippet

snippet echo "Echo a statement" w
echo -e ${1:${VISUAL}}
endsnippet

snippet read "Read input from a user" w
read ${1:${VISUAL}}
endsnippet

###########
#  Loops  #
###########

snippet if "if ... then (if)" b
if ${3:[[ ${2:condition} ]]}; then
  ${1:expression}
${0:possibly good time to expand elif or else}
fi
endsnippet

snippet elif "elif .. (elif)"
elif ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
endsnippet

snippet else "else statement" b
else
	${0}
endsnippet

###########
#  tests  #
###########

snippet strempty "Test if a string is empty which in bash is equal to 0" b
[[ -z ${0:VAR} ]]
endsnippet

###############
#  functions  #
###############

snippet which "Check if which is on the system and fall back to command otherwise." b
_which() {
	which "$1" 2>/dev/null || command -v "$1" 2>/dev/null
}
endsnippet

snippet source "Source a file if it exists" b
[[ -f ${1:${VISUAL}} ]] && source $1 || echo "$1 can not be sourced."
endsnippet


# Vim: set ft=snippets.sh:et:sts=2:ts=2:sw=2:
