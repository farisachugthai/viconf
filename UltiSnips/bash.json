        "prefix": "test_int_equal",
        "body": "test $${0:VAR1} -eq $${1:VAR2}",
        "description": "test int equal"
    },
    "test_int_great_equal" : {
        "prefix": "test_int_great_equal",
        "body": "test $${0:VAR1} -ge $${1:VAR2}",
        "description": "test int great equal"
    },
    "test_int_great_than" : {
        "prefix": "test_int_great_than",
        "body": "test $${0:VAR1} -gt $${1:VAR2}",
        "description": "test int great than"
    },
    "test_int_less_equal" : {
        "prefix": "test_int_less_equal",
        "body": "test $${0:VAR1} -le $${1:VAR2}",
        "description": "test int less equal"
    },
    "test_int_less_than" : {
        "prefix": "test_int_less_than",
        "body": "test $${0:VAR1} -lt $${1:VAR2}",
        "description": "test int less than"
    },
    "test_int_not_equal" : {
        "prefix": "test_int_not_equal",
        "body": "test $${0:VAR1} -ne $${1:VAR2}",
        "description": "test int not equal"
    },
    "test_exist" : {
        "prefix": "test_exist",
        "body": "test -e $${0:VAR}",
        "description": "test exist"
    },
    "test_exist_file" : {
        "prefix": "test_exist_file",
        "body": "test -f $${0:VAR}",
        "description": "test exist file"
    },
    "test_exist_directory" : {
        "prefix": "test_exist_directory",
        "body": "test -d $${0:VAR}",
        "description": "test exist directory"
    },
    "test_exist_readable" : {
        "prefix": "test_exist_readable",
        "body": "test -r $${0:VAR}",
        "description": "test exist readable"
    },
    "test_exist_writeable" : {
        "prefix": "test_exist_writeable",
        "body": "test -w $${0:VAR}",
        "description": "test exist writeable"
    },
    "test_exist_executable" : {
        "prefix": "test_exist_executable",
        "body": "test -x $${0:VAR}",
        "description": "test exist executable"
    },
    "test_exist_link" : {
        "prefix": "test_exist_link",
        "body": "test -h $${0:VAR}",
        "description": "test exist link"
    },
    "test_file_equal" : {
        "prefix": "test_file_equal",
        "body": "test $${0:VAR} -ef $${1:VAR}",
        "description": "test file equal"
    },
    "test_file_new_than" : {
        "prefix": "test_file_new_than",
        "body": "test $${0:VAR} -nt $${1:VAR}",
        "description": "test file new than"
    },
    "test_file_old_than" : {
        "prefix": "test_file_old_than",
        "body": "test $${0:VAR} -ot $${1:VAR}",
        "description": "test file old than"
    },

    "for_in" : {
        "prefix": "for_in",
        "body": "for ${0:VAR} in $${1:LIST}\ndo\n\techo $${0:VAR}\ndone\n",
        "description": "for loop in list"
    },
    "for_i" : {
        "prefix": "for_i",
        "body": "for((${0:i}=0;${0:i}<${1:10};${0:i}++));\ndo\n\techo $${0:i}\ndone\n",
        "description": "for loop by index"
    },
    "while" : {
        "prefix": "while",
        "body": "while ${0:condition} \ndo\n\t${1}\ndone\n",
        "description": "while loop by condition"
    },
    "until" : {
        "prefix": "until",
        "body": "until ${0:condition} \ndo\n\t${1}\ndone\n",
        "description": "until loop by condition"
    },
    "function" : {
        "prefix": "function",
        "body": "function ${0:name}()\n{\n\t${1}\n}",
        "description": "define a function"
    },
    "case" : {
        "prefix": "case",
        "body": "case $${0:VAR} in\n\t${1:1}) echo 1\n\t;;\n\t${2:2|3}) echo 2 or 3\n\t;;\n\t*) echo default\n\t;;\nesac\n",
        "description": "switch case"
    },
    "break" : {
        "prefix": "break",
        "body": "break ${0}",
        "description": "break loop or (n) loops"
    },
    "expr" : {
        "prefix": "expr",
        "body": "expr ${0:1 + 1}",
        "description": "calculate numbers"
    }
    [[ -z ${0:VAR} ]]}
